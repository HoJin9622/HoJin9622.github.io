{"componentChunkName":"component---src-templates-blog-post-js","path":"/React-Native/expo-todo-app/","result":{"data":{"site":{"siteMetadata":{"title":"HoJin9622's Devlog","author":"HoJin9622","siteUrl":"https://hojin9622.github.io","comment":{"disqusShortName":"","utterances":"HoJin9622/HoJin9622.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3c4c6f10-0899-528b-8706-f51cd194e05a","excerpt":"StatueBar StatusBar는 휴대폰 상단의 상태바를 바꿀 수 있게 해준다. react-native에서 import하여 사용한다.  태그 속 제일 상단에 위 코드를 작성하면 상태바가 흰색으로 변경된다. TextInput TextInput은 Web에서의 input과 같은 역할을 가진다. 사용자가 텍스트를 입력할 수 있는 박스를 생성한다. react-native에서 import하여 사용한다. TextInput은 기본적으로 높이가 있어야한다. TextInput의 속성에는 placeholder…","html":"<h2 id=\"statuebar\" style=\"position:relative;\"><a href=\"#statuebar\" aria-label=\"statuebar permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StatueBar</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StatusBar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>StatusBar는 휴대폰 상단의 상태바를 바꿀 수 있게 해준다.</p>\n<p>react-native에서 import하여 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>StatusBar barStyle<span class=\"token operator\">=</span><span class=\"token string\">\"light-content\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">&lt;View&gt;</code> 태그 속 제일 상단에 위 코드를 작성하면 상태바가 흰색으로 변경된다.</p>\n<h2 id=\"textinput\" style=\"position:relative;\"><a href=\"#textinput\" aria-label=\"textinput permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TextInput</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TextInput <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>TextInput은 Web에서의 input과 같은 역할을 가진다.</p>\n<p>사용자가 텍스트를 입력할 수 있는 박스를 생성한다.</p>\n<p>react-native에서 import하여 사용한다.</p>\n<p>TextInput은 기본적으로 높이가 있어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>TextInput\n  style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">}</span>\n  placeholder<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'New To Do'</span><span class=\"token punctuation\">}</span>\n  placeholderTextColor<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'#999'</span><span class=\"token punctuation\">}</span>\n  onChangeText<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_controlNewToDo<span class=\"token punctuation\">}</span>\n  value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>newToDo<span class=\"token punctuation\">}</span>\n  returnKeyType<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">}</span>\n  autoCorrect<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n  multiline<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n  onBlur<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_finishEditing<span class=\"token punctuation\">}</span>\n  onSubmitEditing<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_addToDo<span class=\"token punctuation\">}</span>\n  underlineColorAndroid<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'transparent'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>TextInput의 속성에는 placeholder, placeholderTextColor, value, onChnageText, returnKeyType, autoCorrect, underlineColorAndroid, multiline, onBlur 등이 있다.</p>\n<ol>\n<li>placeholder 속성은 web input의 placeholder와 같이 input 박스 위에 텍스트를 적기 전에 원하는 텍스트를 미리 보여준다.</li>\n<li>placeholderTextColor 속성은 placeholder의 색상을 지정해줄 수 있다.</li>\n<li>onChangeText 속성은 텍스트가 변경될때 지정된 함수를 실행한다.</li>\n<li>value 속성은 현재 state를 나타낸다.</li>\n<li>returnKeyType 속성을 done으로 지정해주면 키보드의 엔터를 done으로 바꿔준다.</li>\n<li>autoCorrect 속성은 자동완성 기능을 가능, 불가능하게 해준다.</li>\n<li>multiline 속성은 true, false로되며 true로하면 여러줄 작성할 수 있다.</li>\n<li>onBlur 속성은 TextInput 말고 다른 곳을 클릭하면 지정된 함수를 실행한다.</li>\n<li>onSubmitEditing 속성은 완료를 클릭할때 함수를 실행한다.</li>\n<li>underlineColorAndroid 속성을 transparent로 지정하면 안드로이드의 TextInput 밑줄을 없애준다.</li>\n</ol>\n<h2 id=\"dimensions\" style=\"position:relative;\"><a href=\"#dimensions\" aria-label=\"dimensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dimensions</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Dimensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>Dimensions은 현재 이 어플을 실행하고 있는 휴대폰의 width와 height를 구할 수 있게 해준다.</p>\n<p>react-native에서 import하여 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">,</span> width <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Dimensions<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드로 휴대폰 화면의 width, height를 가져올 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">card<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token operator\">:</span> width <span class=\"token operator\">-</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>가져온 width를 위와 같이 활용이 가능하다.</p>\n<h2 id=\"scrollview\" style=\"position:relative;\"><a href=\"#scrollview\" aria-label=\"scrollview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ScrollView</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ScrollView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>ScrollView를 import 해준다.</p>\n<p>ScrollView는 스크롤이 있는 View를 생성해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>ScrollView contentContainerStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>toDos<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>ToDo <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ScrollView<span class=\"token operator\">></span></code></pre></div>\n<p>contentContainerStyle 속성은 스타일을 모든 하위 Component에 적용한다.</p>\n<h2 id=\"touchableopacity\" style=\"position:relative;\"><a href=\"#touchableopacity\" aria-label=\"touchableopacity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TouchableOpacity</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TouchableOpacity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>TouchableOpacity는 클릭 가능한 공간을 만들어 주는 것 같다.</p>\n<p>문서 : <a href=\"https://reactnative.dev/docs/touchableopacity\">https://reactnative.dev/docs/touchableopacity</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>TouchableOpacity onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_toggleComplete<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View\n    style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n      styles<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">,</span>\n      isCompleted <span class=\"token operator\">?</span> styles<span class=\"token punctuation\">.</span>completedCircle <span class=\"token operator\">:</span> styles<span class=\"token punctuation\">.</span>uncompletedCircle<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableOpacity<span class=\"token operator\">></span></code></pre></div>\n<p>onPress 속성이 있는데 onPress 속성은</p>\n<p><code class=\"language-text\">onPress={this._toggleComplete}</code> 에 함수를 넣어줘서 클릭 시 실행 할 함수를 넣어준다.</p>\n<h2 id=\"asyncstorage\" style=\"position:relative;\"><a href=\"#asyncstorage\" aria-label=\"asyncstorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AsyncStorage</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AsyncStorage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>AsyncStorage는 휴대폰에 정보를 저장하기 위한 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> saveToDos <span class=\"token operator\">=</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDos'</span><span class=\"token punctuation\">,</span> newToDos<span class=\"token punctuation\">)</span></code></pre></div>\n<p>local storage에 정보를 저장하기 위한 코드이다.</p>\n<p>toDos는 key이고, newToDos는 item이다.</p>\n<p>AsyncStorage에는 object를 저장하면 안되고 string의 형태로 저장해야한다.</p>\n<p>그러므로 글로벌 객체 JSON의 stringify 함수를 이용하여 string 형태로 변환해준다.</p>\n<p><code class=\"language-text\">JSON.stringify(newToDos)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parsedToDos <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>toDos<span class=\"token punctuation\">)</span></code></pre></div>\n<p>string으로 변환한 object를 다시 object를 만드려면 parse 함수를 사용한다.</p>\n<h2 id=\"splash-screen\" style=\"position:relative;\"><a href=\"#splash-screen\" aria-label=\"splash screen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Splash screen</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppLoading <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'expo'</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loadedToDos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>AppLoading <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>AppLoading Component는 expo에서 제공된다.</p>\n<p>AppLoading Component를 import 후 로딩이 되기전에 return하여 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./assets/icon.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"splash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./assets/splash.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"resizeMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"contain\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#F23657\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>로딩화면을 변경하려면 app.json의 icon과 splash 부분을 변경한다.</p>","frontmatter":{"title":"React-Native Component","date":"May 29, 2020","thumbnail":null}}},"pageContext":{"slug":"/React-Native/expo-todo-app/","previous":{"fields":{"slug":"/Redux/redux-toolkit/"},"frontmatter":{"title":"Redux Toolkit","category":"Redux","draft":false}},"next":null}}}