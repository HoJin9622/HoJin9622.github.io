{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/redux-toolkit/","result":{"data":{"site":{"siteMetadata":{"title":"HoJin9622's Devlog","author":"HoJin9622","siteUrl":"https://hojin9622.github.io","comment":{"disqusShortName":"","utterances":"HoJin9622/HoJin9622.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9ecdea4a-9bc1-5bdf-a499-5c592543325d","excerpt":"Redux toolkit 많은 양의 redux 코드를 더 적은 양의 코드로 쓰게 도와주는 것. Redux toolkit 문서 바로가기 설치 먼저 redux toolkit을 설치한다. createAction 기존 작성하였던 위의 코드를 createAction을 사용해 더 짧게 작성 할 수 있다. 그리고 addToDo에는 type과 text를 가졌지만 createAction을 사용하면 type과 payload만 남게된다. 를 해보면 text가 사라지고 payload…","html":"<h2 id=\"redux-toolkit\" style=\"position:relative;\"><a href=\"#redux-toolkit\" aria-label=\"redux toolkit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux toolkit</h2>\n<p>많은 양의 redux 코드를 더 적은 양의 코드로 쓰게 도와주는 것.</p>\n<p><a href=\"https://redux-toolkit.js.org/introduction/quick-start\">Redux toolkit 문서 바로가기</a></p>\n<h2 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">yarn add @reduxjs/toolkit</code></pre></div>\n<p>먼저 redux toolkit을 설치한다.</p>\n<h2 id=\"createaction\" style=\"position:relative;\"><a href=\"#createaction\" aria-label=\"createaction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createAction</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">ADD</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ADD\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DELETE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addToDo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token constant\">ADD</span><span class=\"token punctuation\">,</span>\n    text<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">deleteToDo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token constant\">DELETE</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">ADD</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">DELETE</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>기존 작성하였던 위의 코드를</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span>\n\n<span class=\"token keyword\">const</span> addToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ADD'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> deleteToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> addToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">case</span> deleteToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>createAction을 사용해 더 짧게 작성 할 수 있다.</p>\n<p>그리고 addToDo에는 type과 text를 가졌지만 createAction을 사용하면 type과 payload만 남게된다.</p>\n<p><code class=\"language-text\">console.log()</code>를 해보면 text가 사라지고 payload가 있는 것을 볼 수 있다.</p>\n<p>payload의 이름은 redux toolkit이 우리에게 제공하는 것이라서 변경할 수는 없다.</p>\n<p>action으로 보내고 싶은 정보는 payload에 담기게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> addToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ADD'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> deleteToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> addToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">case</span> deleteToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그러므로 6번째 줄의 action.text를 action.payload로 바꿔줘야한다.</p>\n<p>payload의 값을 보고 싶으면 <code class=\"language-text\">console.log(action)</code>을 입력하면 된다.</p>\n<h2 id=\"createreducer\" style=\"position:relative;\"><a href=\"#createreducer\" aria-label=\"createreducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createReducer</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction<span class=\"token punctuation\">,</span> createReducer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span></code></pre></div>\n<p>먼저 createReducer를 import 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> addToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> deleteToDo<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 createReducer를 사용하기 전이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> reducer <span class=\"token operator\">=</span> <span class=\"token function\">createReducer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>addToDo<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>deleteToDo<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 createReducer를 사용한 후의 코드이다.</p>\n<p>createReducer의 첫번째 인자에는 initial state를 넣고, 두번째 인자는 action을 넣어준다고 생각하면 된다.</p>\n<p>위 코드에서는 initial state로 빈 배열을 주었다.</p>\n<p>createReducer를 사용할땐 두가지 옵션이 있다.</p>\n<p>첫번째로는 state를 변경 할 수 있게 만들어준다.</p>\n<p>두번째로는 원래 하던대로 새로운 state를 return 할 수 있다.</p>\n<p>mutate가 가능한 이유는 immer.js와 redux toolkit이 뒤에서 함께 작동하기 때문이다.</p>\n<p>state를 return 할 때는 filter처럼 새로운 state여야 한다.</p>\n<p>state를 mutate하고 싶다면 return 하지 않아야한다.</p>\n<p>위의 코드의 push는 배열을 mutate를 해서 return을 하지 않는 모습이고, filter는 mutate를 하지 않고 새로운 array를 생성해 return 하는 모습이다.</p>\n<h2 id=\"configurestore\" style=\"position:relative;\"><a href=\"#configurestore\" aria-label=\"configurestore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>configureStore</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction<span class=\"token punctuation\">,</span> createReducer<span class=\"token punctuation\">,</span> configureStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span></code></pre></div>\n<p>configureStore를 import 한 후</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span></code></pre></div>\n<p>기존의 createStore를</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> reducer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아래와 같이 변경하면 구글 크롬의 extension Redux devtools의 불이 들어온다.</p>\n<p>redux devtools는 우리의 state를 볼 수 있게 해준다.</p>\n<p>어떤 action이 발생했고 언제 발생했는지도 알려준다.</p>\n<p>그리고 Redux devtools의 dispatcher를 사용해 dispatch를 보내 볼 수도 있다.</p>\n<p>Redux devtools를 사용하기 위해 redux toolkit이 반드시 필요한건 아니다. 하지만 자동으로 실행시켜준다.</p>\n<p><img src=\"./images/redux-toolkit/reduxdevtoolsaction.png\"></p>\n<p>action 을 확인하는 모습, 하단의 ▶ 버튼으로 되감기 또는 재생 가능.</p>\n<p><img src=\"./images/redux-toolkit/reduxdevtoolsstate.png\"></p>\n<p>state를 확인하는 모습, Chart를 클릭해 모든 state를 볼 수 있음.</p>\n<p><img src=\"./images/redux-toolkit/dispatcher.png\"></p>\n<p>dispatcher로 작성한 dispatch를 실험해 볼 수 있다.</p>\n<h2 id=\"createslice\" style=\"position:relative;\"><a href=\"#createslice\" aria-label=\"createslice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createSlice</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction<span class=\"token punctuation\">,</span> createReducer<span class=\"token punctuation\">,</span> configureStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span>\n\n<span class=\"token keyword\">const</span> addToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ADD'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> deleteToDo <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> reducer <span class=\"token operator\">=</span> <span class=\"token function\">createReducer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>addToDo<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>deleteToDo<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> reducer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> actionCreators <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  addToDo<span class=\"token punctuation\">,</span>\n  deleteToDo<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</code></pre></div>\n<p>🔺기존 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> configureStore<span class=\"token punctuation\">,</span> createSlice <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span>\n\n<span class=\"token keyword\">const</span> toDos <span class=\"token operator\">=</span> <span class=\"token function\">createSlice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'toDosReducer'</span><span class=\"token punctuation\">,</span>\n  initialState<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  reducers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">remove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toDo</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> reducer<span class=\"token operator\">:</span> toDos<span class=\"token punctuation\">.</span>reducer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> add<span class=\"token punctuation\">,</span> remove <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> toDos<span class=\"token punctuation\">.</span>actions\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</code></pre></div>\n<p>createAction 부분을 없앨 수 있고 코드가 더 많이 줄어든 모습이다.</p>\n<p>name에는 reducer의 이름, initialState에는 초기 state, reducer에는 기존 작성했던 action을 적어주면 된다.</p>\n<p>그리고 configureStore 부분에 <code class=\"language-text\">{reducer: toDos.reducer}</code>를 해주고,</p>\n<p>action들은 toDos.actions 에서 사용할 수 있다.</p>","frontmatter":{"title":"[Redux]Redux Toolkit","date":"May 22, 2020","thumbnail":null}}},"pageContext":{"slug":"/javascript/redux-toolkit/","previous":{"fields":{"slug":"/javascript/react-redux/"},"frontmatter":{"title":"[Redux]React-Redux","category":"JavaScript","draft":false}},"next":{"fields":{"slug":"/javascript/native-css/"},"frontmatter":{"title":"[RN]Native CSS","category":"JavaScript","draft":false}}}}}